[IntrabarOrderGeneration = false]
Vars: TickSize( MinMove / PriceScale ),TickValue ((MinMove / PriceScale) * BigPointValue);

// ************  TimeOfDay Filter (TRUE when trading is allowed)************
inputs: Enable_Timefilter(1),TimeOfDay_NonTradingHoursFrom(1655),TimeOfDay_NonTradingHoursTo(1800);
variables: timefilter(false);
if Enable_Timefilter= 1 then begin	
	if  Time>=TimeOfDay_NonTradingHoursFrom and Time <=TimeOfDay_NonTradingHoursTo then
		timefilter=false
	else 
		timefilter=true;
end;


// **************   Max loss/profit filter **********************
inputs:
Enable_ProfitLossFilter(1),Daily_Max_Loss(1000);
vars:
profitlossfilter(true),
todaynet(0),
yesterdaynet(0);
if date <> date[1] then begin
	yesterdaynet = NetProfit;
end;
//if MarketPosition = 0 then begin
	todaynet = NetProfit - yesterdaynet;
//nd;
profitlossfilter= -Daily_Max_Loss< todaynet ;//and todaynet < Daily_Max_Profit;
if Enable_ProfitLossFilter=0 then profitlossfilter=true;//Always allow

if timefilter then begin
	if Enable_ProfitLossFilter=1 and profitlossfilter=false then begin
		if mp>0 then sell next bar at market;
		if mp<0 then buytocover next bar at market;
	end;	
end;



if Enable_Timefilter= 0 then timefilter=true;
input:  ProfitFactor(0.9), TicksBE(25), TicksSL(65);
variables: mt(0), ptticks(0), mtt(0);
mt=absvalue(h[1]-l[1]);

mtt=mt*PriceScale;
mtt=mt/TickSize;
ptticks=mtt*ProfitFactor;

if timefilter then begin
	SetStopShare ;
	setprofittarget(ptticks*TickValue);
	if TicksBE>0 then SetBreakeven( TicksBE*TickValue) ;
	if TicksSL>0 then SetStopLoss(TicksSL*TickValue) ; 
end;

Condition5= timefilter and  profitlossfilter;
if Condition5 then begin

input: Length2( 2 ) ;
 Buytocover ( "ChBrkLE" ) next bar at HighestFC( H, Length2 ) + 1 point stop ;

Sell ( "ChBrkSE" ) next bar at LowestFC( L, Length2 ) - 1 point stop ;




			
			
		inputs: price(Close), jthmaLength( 13 ), upColour(Blue), downColour(Red);
		variables: Avg(0), colour(0);

		Avg = hma( price, jthmaLength ) ;

		if Avg > Avg[1] then colour = upColour;
		if Avg < Avg[1] then colour = downColour;

		{buy sell Criteria}

		if colour[1] <> colour then
		if colour = upColour then
		Buy ( "jup" ) next bar at market ;

		if colour[1] <> colour then
		if colour = downColour then
		sell short( "jdn" ) next bar at market ; 
		
		
Inputs: UseBricks(1), K(0.9), Smooth(5); 
vars: Brick(0) ,DN(0), UP(0), BricksUp(0), BricksDn(0); 

input :AtrIncreasing(1),AtrShortLen(1), AtrLongLen(10);
vars: atrs(0),atrl(0), atrtst(false);
atrs=AverageTrueRange(AtrShortLen);
atrl=AverageTrueRange(AtrLongLen);
atrtst=(atrs>atrl and AtrIncreasing=1) or (atrs<atrl and  AtrIncreasing=0) ;


Value1 = AvgTrueRange(Smooth); 

If BarNumber = 1 Then 
Begin 
Up = H; 
Dn = L; 
Brick = K*(H-L); 
End; 

If BarNumber > 1 then 
begin 
If C > UP + Brick Then 
begin 
BricksUp = IFF(Brick = 0, 0, Floor((C - Up)/Brick)*Brick); 
UP = Up + BricksUp; 
Brick = K*Value1; 
DN = Up - Brick; BricksDn = 0; 
End; 

If C < Dn - Brick Then 
begin 
BricksDn = IFF(Brick = 0, 0, Floor((Dn - C)/Brick)*Brick); 
Dn = Dn - BricksDn; Brick = K*Value1; 
Up = Dn + Brick; 
BricksUp = 0; 
End; 


	if atrtst and c>o  then buy next bar at (c+o)/2 limit;
	if atrtst and c<o  then sellshort next bar at (c+o)/2 limit;
	If UseBricks=1 and Condition5 and Up > Up[1] then sellshort next bar at market; 
	If UseBricks=1 and Condition5 and Dn < Dn[1] then buy next bar at market; 

end;
end;




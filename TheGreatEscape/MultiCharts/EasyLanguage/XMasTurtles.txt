//heres the complete code to the LowLim-day strategy.
//again, make sure you allow for *4* multiple entries
//when *generated by different orders* in the "strategy properties".
//also, on the "DV = (N*10000) * 10;" line, you have to change the "10000"
//to the dollar value of one point. i was using 10000 on forex. 

vars: N(0),StopLoss(1),DV(0),BB(0),LTT(0), 
Tracker(0),LastTrade(0),HBP(0),LBP(0); 

input: LowLim(20), HighLim(55);
// ************  TimeOfDay Filter (TRUE when trading is allowed)************
inputs: Enable_Timefilter(1),TimeOfDay_NonTradingHoursFrom(1655),TimeOfDay_NonTradingHoursTo(1800);
variables: timefilter(false);
if Enable_Timefilter= 1 then begin	
	if  Time>=TimeOfDay_NonTradingHoursFrom and Time <=TimeOfDay_NonTradingHoursTo then
		timefilter=false
	else 
		timefilter=true;
end;
if Enable_Timefilter= 0 then timefilter=true;

// **************   Max loss/profit filter **********************
inputs:
Enable_ProfitLossFilter(1),Daily_Max_Profit(10000),Daily_Max_Loss(1000);
vars:
profitlossfilter(true),
todaynet(0),
yesterdaynet(0);
if date <> date[1] then begin
	yesterdaynet = NetProfit;
end;
//if MarketPosition = 0 then begin
	todaynet = NetProfit - yesterdaynet;
//nd;
profitlossfilter= -Daily_Max_Loss< todaynet ;//and todaynet < Daily_Max_Profit;
if Enable_ProfitLossFilter=0 then profitlossfilter=true;//Always allow

//inputs:  TicksSL( 40 ) ;


if timefilter then begin
	SetStopShare ;
//	SetStopLoss(TicksSL*TickValue) ; 
	
	if Enable_ProfitLossFilter=1 and profitlossfilter=false then begin
		if mp>0 then sell next bar at market;
		if mp<0 then buytocover next bar at market;
	end;	
end;

{Trade Rules with or without short trades} 

Condition5= timefilter and  profitlossfilter;



/// Turtle LowLim-Day Breakout Replica ////////////////////////////////////// 
Input : TradeRestrictions(2), StartLevel(0.5) ,StepsLevel(0.5);
if marketposition = 0 then begin 
	BB = 0; 
	input:AtrPeriods(20), AtrFactor(1);
	N = AvgTrueRange(AtrPeriods)*AtrFactor;
	DV = N*BigPointValue; 
	LTT =1;// IntPortion(DollarRisk/DV); 
	if Condition5 and LastTrade = -1 then begin 
		buy LTT shares next bar highest(h,LowLim) or higher; 
		if TradeRestrictions>1 then buy LTT shares next bar highest(h,LowLim) + ((StartLevel + StepsLevel*0)*N) or higher; 
		if TradeRestrictions>2 then buy LTT shares next bar highest(h,LowLim) + ((StartLevel + StepsLevel*1)*N) or higher; 
		if TradeRestrictions>3 then buy LTT shares next bar highest(h,LowLim) + ((StartLevel + StepsLevel*2)*N) or higher; 
		sellshort LTT shares next bar lowest(l,LowLim) or lower; 
		if TradeRestrictions>1 then sellshort LTT shares next bar lowest(l,LowLim) - ((StartLevel + StepsLevel*0)*N) or lower; 
		if TradeRestrictions>2 then sellshort LTT shares next bar lowest(l,LowLim) - ((StartLevel + StepsLevel*1)*N) or lower; 
		if TradeRestrictions>3 then sellshort LTT shares next bar lowest(l,LowLim) - ((StartLevel + StepsLevel*2)*N) or lower; 
	end; 
	if Condition5 and LastTrade = 1 then begin 
		buy LTT shares next bar highest(h,HighLim) or higher; 
		if TradeRestrictions>1 then buy LTT shares next bar highest(h,HighLim) + ((StartLevel + StepsLevel*0)*N) or higher; 
		if TradeRestrictions>2 then buy LTT shares next bar highest(h,HighLim) + ((StartLevel + StepsLevel*1)*N) or higher; 
		if TradeRestrictions>3 then buy LTT shares next bar highest(h,HighLim) + ((StartLevel + StepsLevel*2)*N) or higher; 
		sellshort LTT shares next bar lowest(l,HighLim) or lower; 
		if TradeRestrictions>1 then sellshort LTT shares next bar lowest(l,HighLim) - ((StartLevel + StepsLevel*0)*N) or lower; 
		if TradeRestrictions>2 then sellshort LTT shares next bar lowest(l,HighLim) - ((StartLevel + StepsLevel*1)*N) or lower; 
		if TradeRestrictions>3 then sellshort LTT shares next bar lowest(l,HighLim) - ((StartLevel + StepsLevel*2)*N) or lower; 
	end; 
end; 

// PREVIOUS TRADE TRACKER 
if HBP = 0 and h > highest(h,19)[1] then begin 
	Tracker = 1; HBP = h; LBP = 0; 
end; 
if LBP = 0 and l < lowest(l,19)[1] then begin 
	Tracker = -1; LBP = l; HBP = 0; 
end; 
if Tracker = 1 then begin 
	if l < HBP - (2*N) then LastTrade = -1; 
	if h > HBP + (4*N) then LastTrade = 1; 
end; 
if Tracker = -1 then begin 
	if h > LBP + (2*N) then LastTrade = -1; 
	if l < LBP - (4*N) then LastTrade = 1; 
end; 

// LONG LowLim 
if Condition5 and LastTrade = -1 and marketposition = 1 then begin 
	BB = BB + 1; 
	if currentshares = LTT then begin 
		if TradeRestrictions>1 then buy LTT shares next bar highest(h,LowLim)[BB] + ((StartLevel + StepsLevel*0)*N) or higher; 
		if TradeRestrictions>2 then buy LTT shares next bar highest(h,LowLim)[BB] + ((StartLevel + StepsLevel*1)*N) or higher; 
		if TradeRestrictions>3 then buy LTT shares next bar highest(h,LowLim)[BB]+ ((StartLevel + StepsLevel*2)*N) or higher; 
	end; 
	if currentshares = LTT * 2 then begin 
		if TradeRestrictions>2 then  buy LTT shares next bar highest(h,LowLim)[BB] + ((StartLevel + StepsLevel*1)*N) or higher; 
		if TradeRestrictions>3 then buy LTT shares next bar highest(h,LowLim)[BB] + ((StartLevel + StepsLevel*2)*N) or higher; 
	end; 
	if currentshares = LTT * 3 then 
		if TradeRestrictions>3 then buy LTT shares next bar highest(h,LowLim)[BB] + ((StartLevel + StepsLevel*2)*N) or higher; 
end; 
// LONG HighLim 
if Condition5 and LastTrade = 1 and marketposition = 1 then begin 
	BB = BB + 1; 
	if currentshares = LTT then begin 
		if TradeRestrictions>1 then buy LTT shares next bar highest(h,HighLim)[BB] + ((StartLevel + StepsLevel*0)*N) or higher; 
		if TradeRestrictions>2 then buy LTT shares next bar highest(h,HighLim)[BB] + ((StartLevel + StepsLevel*1)*N) or higher; 
		if TradeRestrictions>3 then buy LTT shares next bar highest(h,HighLim)[BB]+ ((StartLevel + StepsLevel*2)*N) or higher; 
	end; 
	if currentshares = LTT * 2 then begin 
		if TradeRestrictions>2 then buy LTT shares next bar highest(h,HighLim)[BB] + ((StartLevel + StepsLevel*1)*N) or higher; 
		if TradeRestrictions>3 then buy LTT shares next bar highest(h,HighLim)[BB] + ((StartLevel + StepsLevel*2)*N) or higher; 
	end; 
	if currentshares = LTT * 3 then 
		if TradeRestrictions>3 then buy LTT shares next bar highest(h,HighLim)[BB] + ((StartLevel + StepsLevel*2)*N) or higher; 
end; 

//if Condition5 then sell ("out-S") next bar lowest(l,10) or lower; 

// SHORT LowLim 
if Condition5 and LastTrade = -1 and marketposition = -1 then begin 
	BB = BB + 1; 
	if currentshares = LTT then begin 
		if TradeRestrictions>1 then sellshort LTT shares next bar lowest(l,LowLim)[BB] - ((StartLevel + StepsLevel*0)*N) or lower; 
		if TradeRestrictions>2 then  sellshort LTT shares next bar lowest(l,LowLim)[BB] - ((StartLevel + StepsLevel*1)*N) or lower; 
		if TradeRestrictions>3 then  sellshort LTT shares next bar lowest(l,LowLim)[BB] - ((StartLevel + StepsLevel*2)*N) or lower; 
	end; 
	if currentshares = LTT * 2 then begin 
		if TradeRestrictions>2 then  sellshort LTT shares next bar lowest(l,LowLim)[BB] - ((StartLevel + StepsLevel*1)*N) or lower; 
		if TradeRestrictions>3 then sellshort LTT shares next bar lowest(l,LowLim)[BB] - ((StartLevel + StepsLevel*2)*N) or lower; 
	end; 
	if currentshares = LTT * 3 then 
		if TradeRestrictions>3 then  sellshort LTT shares next bar lowest(l,LowLim)[BB] - ((StartLevel + StepsLevel*2)*N) or lower; 
end; 
// SHORT HighLim 
if Condition5 and LastTrade = 1 and marketposition = -1 then begin 
	BB = BB + 1; 
	if currentshares = LTT then begin 
		if TradeRestrictions>1 then sellshort LTT shares next bar lowest(l,HighLim)[BB] - ((StartLevel + StepsLevel*0)*N) or lower; 
		if TradeRestrictions>2 then sellshort LTT shares next bar lowest(l,HighLim)[BB] - ((StartLevel + StepsLevel*1)*N) or lower; 
		if TradeRestrictions>3 then sellshort LTT shares next bar lowest(l,HighLim)[BB] - ((StartLevel + StepsLevel*2)*N) or lower; 
	end; 
	if currentshares = LTT * 2 then begin 
		if TradeRestrictions>2 then sellshort LTT shares next bar lowest(l,HighLim)[BB] - ((StartLevel + StepsLevel*1)*N) or lower; 
		if TradeRestrictions>3 then sellshort LTT shares next bar lowest(l,HighLim)[BB] - ((StartLevel + StepsLevel*2)*N) or lower; 
	end; 
	if currentshares = LTT * 3 then 
		if TradeRestrictions>3 then sellshort LTT shares next bar lowest(l,HighLim)[BB] - ((StartLevel + StepsLevel*2)*N) or lower; 
end; 
//if Condition5 then buytocover ("out-B") next bar highest(h,10) or higher; 



// COMMENTARY 
commentary ("LTT: ",LTT,Newline); 
commentary ("CurrentShares: ",CurrentShares,Newline); 
commentary ("StopLoss: ",StopLoss,Newline); 
commentary ("LastTrade: ",LastTrade,NewLine);
